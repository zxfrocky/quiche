(function() {var implementors = {};
implementors["quiche"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"quiche/enum.Error.html\" title=\"enum quiche::Error\">Error</a>","synthetic":false,"types":["quiche::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"quiche/struct.RecvInfo.html\" title=\"struct quiche::RecvInfo\">RecvInfo</a>","synthetic":false,"types":["quiche::RecvInfo"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"quiche/struct.SendInfo.html\" title=\"struct quiche::SendInfo\">SendInfo</a>","synthetic":false,"types":["quiche::SendInfo"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"quiche/h3/enum.Error.html\" title=\"enum quiche::h3::Error\">Error</a>","synthetic":false,"types":["quiche::h3::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"quiche/enum.Type.html\" title=\"enum quiche::Type\">Type</a>","synthetic":false,"types":["quiche::packet::Type"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"quiche/enum.CongestionControlAlgorithm.html\" title=\"enum quiche::CongestionControlAlgorithm\">CongestionControlAlgorithm</a>","synthetic":false,"types":["quiche::recovery::CongestionControlAlgorithm"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()